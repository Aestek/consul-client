apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

version = '0.5'
group = 'com.orbitz.consul'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
    }
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.3.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.0'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3.0'

    compile 'org.glassfish.jersey.core:jersey-client:2.6'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.3'
    compile('org.glassfish.jersey.media:jersey-media-json-jackson:2.6') {
        exclude group: 'org.codehaus.jackson'
    }
    compile 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.6'

    compile 'javax.annotation:javax.annotation-api:1.2'

    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:2.3.0'
    compile 'com.google.guava:guava:17.0'
    compile 'commons-codec:commons-codec:1.9'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task clientJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    failOnError = false
    classpath = project.configurations.compile
}

task javadocJar(type: Jar, dependsOn: clientJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}