apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'signing'
apply from: 'gradle/maven.gradle'

version = '0.10.0'
group = 'com.orbitz.consul'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:+'
    }
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.3'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.6.3'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:2.6.3'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'org.immutables:value:2.0.16'
    compile 'org.slf4j:slf4j-api:1.7.12'

    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'javax.annotation:javax.annotation-api:1.2'

    testCompile 'org.apache.cxf:cxf-rt-rs-client:3.0.3'
    testCompile 'org.apache.cxf:cxf-rt-transports-http-hc:3.0.3'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'commons-logging:commons-logging:1.1.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    metaInf {
        from "LICENSE"
    }
}

task clientJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    failOnError = false
    classpath = project.configurations.compile
}

task javadocJar(type: Jar, dependsOn: clientJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    metaInf {
        from "LICENSE"
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
